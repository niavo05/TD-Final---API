openapi: 3.0.0
info:
  title: Football Competition Management API
  version: 1.0.0
  description: API for managing football competitions, teams, and players.

servers:
  - url: https://localhost.GestionCompetition.com

paths:
  /competitions:
    get:
      description: Retrieve a list of all competitions
      parameters:
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/PageSize'
      responses:
        '200':
          description: A paginated list of competitions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCompetitions'
    post:
      description: Create a new competition
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Competition'
      responses:
        '201':
          description: Competition created successfully

  /teams:
    get:
      description: Retrieve a list of all teams
      parameters:
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/TeamName'
      responses:
        '200':
          description: A paginated list of teams
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTeams'
    post:
      description: Create a new team
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Team'
      responses:
        '201':
          description: Team created successfully

  /teams/{teamId}/players:
    get:
      description: Retrieve a list of players for a specific team
      parameters:
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/PageSize'
        - name: teamId
          in: path
          required: true
          schema:
            type: string
          description: ID of the team
      responses:
        '200':
          description: A paginated list of players
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPlayers'
    post:
      description: Create a new player for a specific team
      parameters:
        - name: teamId
          in: path
          required: true
          schema:
            type: string
          description: ID of the team
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Player'
      responses:
        '201':
          description: Player created successfully

components:
  parameters:
    Page:
      name: page
      in: query
      required: true
      schema:
        type: integer
        minimum: 1
      description: Page number for pagination

    PageSize:
      name: pageSize
      in: query
      required: true
      schema:
        type: integer
        minimum: 1
      description: Number of items per page for pagination

    TeamName:
      name: teamName
      in: query
      schema:
        type: string
      description: Filter teams by their name

  schemas:
    Competition:
      type: object
      properties:
        name:
          type: string
          example: LIGA
        location:
          type: string
          example: SPAIN

    Team:
      type: object
      properties:
        name:
          type: string
          example: Real Madrid
        slogan:
          type: string
          example: "Hala Madrid!"

    Player:
      type: object
      properties:
        name:
          type: string
          example: Cristiano Ronaldo
        number:
          type: integer
          example: 7
        strongFoot:
          type: string
          enum: [Left, Right]
          example: Right

    PaginatedCompetitions:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Competition'
        page:
          type: integer
          example: 1
        pageSize:
          type: integer
          example: 10
        totalItems:
          type: integer
          example: 100

    PaginatedTeams:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Team'
        page:
          type: integer
          example: 1
        pageSize:
          type: integer
          example: 10
        totalItems:
          type: integer
          example: 100

    PaginatedPlayers:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Player'
        page:
          type: integer
          example: 1
        pageSize:
          type: integer
          example: 10
        totalItems:
          type: integer
          example: 100
